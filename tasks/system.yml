- hosts: localhost
  connection: local
  become: true
  
  tasks:
  - name: Ensure Paru is installed
    kewlfft.aur.aur:
      state: present
      name:
        - paru-bin

  - name: Set pacman Color
    lineinfile:
      path: /etc/pacman.conf
      regexp: "^#Color"
      line: "Color"
  
  - name: Set pacman ParallelDownloads
    lineinfile:
      path: /etc/pacman.conf
      regexp: "^#ParallelDownloads"
      line: "ParallelDownloads = 12"
  
  - name: Set pacman VerbosePkgLists
    lineinfile:
      path: /etc/pacman.conf
      regexp: "^#VerbosePkgLists"
      line: "VerbosePkgLists"

  - name: Enable multilib packages
    blockinfile:
      path: /etc/pacman.conf
      block: |
        [multilib]
        Include = /etc/pacman.d/mirrorlist

  - name: Synchronize package databases
    package:
      update_cache: true

  - name: Install packages required for playbook
    package:
      extra_args: "--ignore linux --ignore linux-zen" # NOTE: check if functional
      name:
        - amd-ucode
        - base-devel
        - booster
        - chezmoi
        - intel-ucode
        - zsh

  - name: Remove mkinitcpio packages
    package:
      state: absent
      force: true
      name:
        - mkinitcpio
        - mkinitcpio-archiso
        - mkinitcpio-busybox
        - mkinitcpio-nfs-utils
  
  - name: Ensure /etc/zsh directory exists
    file:
      path: /etc/zsh
      state: directory
      mode: 0755
      recurse: true

  - name: Configure ZDOTDIR
    blockinfile:
      path: /etc/zsh/zshenv
      create: true
      mode: 0644
      block: |
        export ZDOTDIR="$HOME"/.config/zsh

  - name: Ensure ~/.local/state/zsh directory exists
    become: true
    become_user: main
    file:
      path: ~/.local/state/zsh
      state: directory
      mode: 0755
      recurse: true
  
  - name: Ensure zsh history exists
    become: true
    become_user: main
    copy:
      dest: ~/.local/state/zsh/history
      force: false
      mode: 0600
      content: ""
  
  - name: Make user use zsh as the default shell
    shell: chsh -s /usr/bin/zsh main

  - name: Ensure installed packages
    package:
      extra_args: "--ignore linux --ignore linux-zen" # NOTE: check if functional
      name:
        # - arch-wiki-docs
        # - gcc
        # - git-delta
        # - glow
        # - grim
        # - lynx
        # - onefetch
        # - pacman-contrib # NOTE: i dont remember what this is for
        # - python-pynvim # NOTE: nvim checkhealth likes having this, added because python lsp
        # - ripgrep-all
        # - slurp
        # - vivid # NOTE: LS_COLORS generator
        # - wikiman
        # - ytfzf
        - ansible
        - aria2
        - base-devel
        - bat
        - booster
        - btop
        - chezmoi
        - eza
        - fd
        - fzf
        - gammastep
        - git
        - kitty
        - man-db
        - mpv
        - ninja
        - noto-fonts
        - noto-fonts-cjk
        - noto-fonts-emoji
        - noto-fonts-extra
        - npm # NOTE: TSUpdate relies on this
        - openssh
        - python-pillow # NOTE: this is required for ranger's kitty image preview
        - ranger
        - ripgrep
        - starship
        - sudo
        - tmux
        - tokei # NOTE: fast loc parser
        - tree-sitter-cli # tree-sitter wants this for health :TSInstallFromGrammar
        - ttf-jetbrains-mono-nerd
        - unzip # NOTE: mason depends on this
        - wget # NOTE: mason depends on this
        - wl-clipboard
        - xdg-desktop-portal-hyprland
        - yt-dlp
        - zoxide
        - zsh

  - name: Allow the main user to run passwordless sudo
    blockinfile:
      path: /etc/sudoers.d/u_main
      create: true
      mode: 0644
      validate: "visudo -cf %s"
      block: |
        main ALL=(ALL) NOPASSWD:ALL

# Updated until this line
  - name: Update system
    become: true
    become_user: main
    shell: paru -Syu --noconfirm --ignore linux

  - name: Install aur packages
    become: true
    become_user: main
    kewlfft.aur.aur:
      use: paru
      extra_args: "-a"
      name:
        # - nvtop-nosystemd-git
        # - rofi-lbonn-wayland-only-git
        # - timg
        # - tldr++
        # - ff2mpv-native-messaging-host-librewolf-git
        - hyprland-nvidia-git
        - librewolf-bin
        - librewolf-extension-dark-reader-bin
        - neovim-git
        - paru-bin
        - pfetch-rs-bin
        - rate-mirrors-bin
        - swww
        - xdg-ninja-git
      state: present

  - name: Install packages requiring manual intervention
    become: true
    become_user: main
    shell: yes | paru -Sy --needed \
      neovim-symlinks \
      pigz-gzip-symlink \

  - name: Install aur librewolf-extension-clearurls
    become: true
    become_user: main
    shell: cd ~/dotfiles/aur/librewolf-extension-clearurls && makepkg -i --needed --noconfirm

  - name: Allow the main user to run passworded sudo
    blockinfile:
      path: /etc/sudoers.d/u_main
      create: true
      mode: 0644
      validate: "visudo -cf %s"
      block: |
        main ALL=(ALL) ALL
