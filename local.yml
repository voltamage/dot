- hosts: localhost
  connection: local
  become: true

  tasks:
  - name: Initialize dotfiles repository
    shell: ansible-playbook /home/artix/.ansible/pull/artixlinux/tasks/dotinit.yml --ask-vault-pass

  - name: Ensure /etc/zsh directory exists
    file:
      dest: /etc/zsh
      owner: root
      group: root
      state: directory
      mode: 0755

  - name: Configure ZDOTDIR
    copy:
      dest: /etc/zsh/zshenv
      content: |
        export ZDOTDIR="$HOME"/.config/zsh
  
  - name: Ensure ~/.local/state/zsh directory exists
    file:
      dest: /home/artix/.local/state/zsh
      owner: artix
      group: artix
      state: directory
      mode: 0755
  
  - name: Ensure zsh history exists
    copy:
      content: ""
      dest: /home/artix/.local/state/zsh/history
      force: no
      owner: artix
      group: artix
      mode: 0600
  
  - name: Ensure chezmoi directory exists
    file:
      dest: /home/artix/.config/chezmoi
      owner: artix
      group: artix
      state: directory
      mode: 0755
  
  - name: Copy chezmoi.yaml
    copy:
      src: /home/artix/.ansible/pull/artixlinux/tasks/files/chezmoi.yaml
      dest: /home/artix/.config/chezmoi/chezmoi.yaml
      owner: artix
      group: artix

  - name: Configure pacman Color
    lineinfile:
      path: /etc/pacman.conf
      regexp: '^#Color'
      line: Color
      
  - name: Configure pacman ParallelDownloads
    lineinfile:
      path: /etc/pacman.conf
      regexp: '^#ParallelDownloads'
      line: ParallelDownloads = 12
  
  - name: Configure pacman VerbosePkgLists
    lineinfile:
      path: /etc/pacman.conf
      regexp: '^#VerbosePkgLists'
      line: VerbosePkgLists
  
  - name: Install base-devel
    package:
      name:
        - base-devel
        - booster
  
  - name: Removed mkinitcpio packages
    package:
      name:
        - mkinitcpio
        - mkinitcpio-busybox
        - mkinitcpio-nfs-utils
        - mkinitcpio-openswap
      state: absent
      force: true
  
  - name: Ensure the ansible user exists
    user:
      name: ansible
      create_home: yes

  - name: Allow the ansible user to run passwordless sudo
    lineinfile:
      path: /etc/sudoers.d/u_ansible
      line: 'ansible ALL=(ALL) NOPASSWD:ALL'
      create: yes
      mode: 0644
      validate: 'visudo -cf %s'

  - name: Install Paru
    kewlfft.aur.aur:
      name: paru-bin
      state: present
    become: yes
    become_user: ansible
    
  - name: Install rate-mirrors
    kewlfft.aur.aur:
      use: paru
      extra_args: "-a"
      name:
        - rate-mirrors-bin
      state: present
    become: yes
    become_user: ansible

  - name: Add Universe and lib32 repositories to pacman.conf
    blockinfile:
      path: /etc/pacman.conf
      block: |

        # For 32-bit packages
        [lib32]
        Include = /etc/pacman.d/mirrorlist
        
        # Artix repository containing artix-archlinux-support to enable Arch repos
        [universe]
        Server = https://mirror1.artixlinux.org/universe/$arch
  
  - name: Add Arch Linux and 32-bit devel support for Artix
    package:
      name:
        - artix-archlinux-support
        - lib32-artix-archlinux-support
        - multilib-devel
      update_cache: true
  
  - name: Add Arch repositories to pacman.conf
    blockinfile:
      path: /etc/pacman.conf
      block: |
        
        # For 32-bit packages
        [lib32]
        Include = /etc/pacman.d/mirrorlist
        
        # Arch Linux repos, community requires extra
        [extra]
        Include = /etc/pacman.d/mirrorlist-arch
        
        [multilib]
        Include = /etc/pacman.d/mirrorlist-arch
        
        # Artix repository containing artix-archlinux-support to enable Arch repos
        [universe]
        Server = https://mirror1.artixlinux.org/universe/$arch
  
  - name: Update mirrorlist
    package:
      update_cache: true
  
  - name: Refresh mirrorlist
    shell: ansible-playbook /home/artix/.ansible/pull/artixlinux/tasks/mirrorlist.yml
  
  - name: Update system
    package:
      update_cache: true
      upgrade: true

